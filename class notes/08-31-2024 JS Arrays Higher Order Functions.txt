


How to create functions in JS

1. Function declearation - traditional 

function funcName(args) {
    // block
}

function sum(a, b) {
    return a + b;
}

sum(3, 5);


2. Function expression
const sum = function (a, b) {
    return a + b;
}

sum(3, 5);


3. Arrow functions: released with ES6 and it provides more concise way to create functions
const sum => (a, b) {
    return a + b;
}



// create a function called product which returns the multiplication of 2 numbers

const product => (a, b) {
    return a * b;
}


// Write a function named printHello which prints Hello

const printHello => () {
    console.log('Hello')
}


// Enhanced Arrow function when there only 1 line of code within body
const product = (a, b) => a * b; // return type

const printHello = () => console.log('Hello') // void type

const arr = [40, 30, 2, -5];

arr.sort((a, b) => a - b)



function getInfo() {
    console.log('Today is Saturday);
}

function greet(func) {
    console.log('Hello');
    func();
}

greet(getInfo);

OUTPUT
Hello
Today is Saturday

greet: higer order function ( taking another function as an argument)
getInfo: callback function (passed as an argument to another function)

